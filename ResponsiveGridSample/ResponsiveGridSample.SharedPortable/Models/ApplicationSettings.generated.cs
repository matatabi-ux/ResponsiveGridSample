//<auto-generated />
#region License
//-----------------------------------------------------------------------
// <copyright>
//     Copyright matatabi-ux 2014.
// </copyright>
//-----------------------------------------------------------------------
#endregion

namespace ResponsiveGridSample.Models
{
    using System;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.Text;
    using System.Threading;
    using System.Threading.Tasks;
    using System.Xml.Serialization;

    /// <summary>
    /// アプリケーション設定情報 のインタフェース
    /// </summary>
    public partial interface IApplicationSettings
    {
        bool IsFirstRun { get; set; }
        List<Photo> Items { get; set; }
    }

    /// <summary>
    /// アプリケーション設定情報
    /// </summary>
    [XmlRoot("app-setting")]
    public partial class ApplicationSettings : IApplicationSettings
    {
        #region マルチスレッド排他制御用

        /// <summary>
        /// 排他制御フラグ
        /// </summary>
        private static bool isSynchronize = false;

        /// <summary>
        /// 排他制御フラグ
        /// </summary>
        [XmlIgnore]
        public static bool IsSynchronize
        {
            get { return isSynchronize; }
            set { isSynchronize = value; }
        }

        /// <summary>
        /// 排他制御オブジェクト
        /// </summary>
        public static readonly Mutex LockObject = new Mutex();

        #endregion //マルチスレッド排他制御用

        #region IsFirstRun:初回起動フラグ プロパティ
        /// <summary>
        /// 初回起動フラグ
        /// </summary>
        private bool isFirstRun; 

        /// <summary>
        /// 初回起動フラグ の取得および設定
        /// </summary>
        [XmlAttribute("first-run")]
        public bool IsFirstRun
        {
            get { return this.isFirstRun; }
            set 
            {
                try
                {
                    if (isSynchronize)
                    {
                        LockObject.WaitOne();
                    }

                    this.isFirstRun = value;
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (isSynchronize)
                    {
                        LockObject.ReleaseMutex();
                    }
                }
            }
        }
        #endregion //IsFirstRun:初回起動フラグ プロパティ

        #region Items:写真情報 プロパティ
        /// <summary>
        /// 写真情報
        /// </summary>
        private List<Photo> items; 

        /// <summary>
        /// 写真情報 の取得および設定
        /// </summary>
        [XmlElement("photo")]
        public List<Photo> Items
        {
            get { return this.items; }
            set 
            {
                try
                {
                    if (isSynchronize)
                    {
                        LockObject.WaitOne();
                    }

                    this.items = value;
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (isSynchronize)
                    {
                        LockObject.ReleaseMutex();
                    }
                }
            }
        }
        #endregion //Items:写真情報 プロパティ

    }

}